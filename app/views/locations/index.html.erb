<ol class="breadcrumb">
  <li><a href="/trips">My Trips</a></li>
  <li class="active"><%= @trip.name %></li>
</ol>

<%= content_tag :div, class: "locations_information", data: {locations: @locations} do %>
<% end %>

<div id="map"></div>

<script async defer
  src="https://maps.googleapis.com/maps/api/js?key=AIzaSyDfDMuS-T8EaT1i_72vzMG181Qm4GyXXos&callback=initMap">
</script>

<script type="text/javascript">
  var map;

  var markers_locations=[];
  var marker_location;
  var markers_temp = {};
  var addMarker;
  var labels_location = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';
  var labelIndex_location = 0;
  var myLatLng_location=[];

  var locations_information = $('.locations_information').data('locations');

  for (var i = 0; i < locations_information.length; i++) {
    var latLng = {lat: parseFloat(locations_information[i].loc_lat), lng: parseFloat(locations_information[i].loc_lng)};
    myLatLng_location.push(latLng);
  };

  function initMap() {

    map = new google.maps.Map(document.getElementById('map'), {
      center: {lat: <%= @trip.lat %>, lng: <%= @trip.lng %>},
      zoom: 15
    });
    // This event listener calls addMarker() when the map is clicked.
    google.maps.event.addListener(map, 'click', function(event) {
      addMarker(event.latLng, map);
    });

  }//initMaps


  function drop() {
    clearMarkers();
    labelIndex_location = 0;
    labels_location = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';
    for (var i = 0; i < myLatLng_location.length; i++) {
      addMarkerWithTimeout(myLatLng_location[i], 200+i * 200);
    }
  }

  function addMarkerWithTimeout(position, timeout) {
    window.setTimeout(function() {
      markers_locations.push(new google.maps.Marker({
        position: position,
        label: labels_location[labelIndex_location++ % labels_location.length],
        map: map,
        animation: google.maps.Animation.DROP
      }));
    }, timeout);
  }

  function clearMarkers() {
    for (var i = 0; i < markers_locations.length; i++) {
      markers_locations[i].setMap(null);
    }
    markers_locations = [];
  }

  document.onload = drop();

  var getMarkerUniqueId= function(lat, lng) {
    return lat + '_' + lng;
  }

  var getLatLng = function(lat, lng) {
    return new google.maps.LatLng(lat, lng);
  };

  function addMarker(location, map) {
  // Add the marker at the clicked location, and add the next-available label
  // from the array of alphabetical characters.
    var lat = location.lat(); // lat of clicked point
    var lng = location.lng(); // lng of clicked point
    var markerId = getMarkerUniqueId(lat, lng); // this will be used to cache this marker in markers_temp object.

    marker_location = new google.maps.Marker({
      position: getLatLng(lat, lng),
      label: labels_location[labelIndex_location++ % labels_location.length],
      map: map,
      draggable:true,
      id: 'marker_' + markerId
    });
    
    $('#location_loc_lat').val(lat);
    $('#location_loc_lng').val(lng);

    google.maps.event.addListener(marker_location, 'dragend', function(ev){
      lat = marker_location.getPosition().lat();
      lng = marker_location.getPosition().lng();
      $('#location_loc_lat').val(lat);
      $('#location_loc_lng').val(lng);
    });

    markers_temp[markerId] = marker_location; // cache marker in markers object
    bindMarkerEvents(marker_location); // bind right click event to marker

    markers_locations.push(marker_location);

  }//add markers

  var bindMarkerEvents = function(markers_locations) {
    google.maps.event.addListener(markers_locations, "rightclick", function (point) {
        var markerId = getMarkerUniqueId(point.latLng.lat(), point.latLng.lng()); // get marker id by using clicked point's coordinate
        var markers_locations = markers_temp[markerId]; // find marker
        removeMarker(markers_locations, markerId); // remove it
    });
  };

  var removeMarker = function(markers_locations, markerId) {
    markers_locations.setMap(null); // set markers setMap to null to remove it from map
    delete markers_temp[markerId]; // delete marker instance from markers object
  };

  // google.maps.event.addDomListener(window, 'load', initMap);

</script>

<div class="dropup location_list">
  <button class="btn btn-default dropdown-toggle" type="button" id="dropdownMenu2" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
    <p>Location List &#9776;<p>
  </button>
  <ul class="dropdown-menu" aria-labelledby="dropdownMenu2">
    <table class="table table-hover">
      <thead>
        <tr>
          <th>Address</th>
          <th>Venue</th>
          <th>Pin Dropper</th>
          <th colspan="3"></th>
        </tr>
      </thead>
      <tbody>
        <% @locations.each do |location| %>
          <tr>
            <td><%= location.address %></td>
            <td><%= location.venue %></td>
            <td><%= location.user.name %></td>
            <td><%= link_to 'Destroy', trip_location_path(@trip,location), method: :delete, data: { confirm: 'Are you sure?' } %></td>
          </tr>
        <% end %>
      </tbody>
    </table>
  </ul>
</div>

<div class="trip_form">
  <div class="btn btn-default dropdown-toggle" id="dropdownMenu1" data-toggle="dropdown" aria-haspopup="true" aria-expanded="true">
    <p>Add Location &#9776;<p>
  </div>
  <ul class="dropdown-menu dropdown-menu-left" aria-labelledby="dropdownMenu1">
  <%= form_for :location, url: trip_locations_path(@trip,@locations) do |f| %>
    Loc_lat: <%= f.text_field :loc_lat %> <br>
    Loc_lng: <%= f.text_field :loc_lng %> <br>
    Address: <%= f.text_field :address %> <br>
    Venue: <%= f.text_field :venue %> <br>
    <button type="submit" id="create_trip" class="create_trip">Create</button>
  <% end %>
  <%= link_to 'Back to Trip Plan', trips_path %>
  </ul>
</div>

